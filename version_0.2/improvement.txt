Improments:
1. 将裸指针改为智能指针，程序自动释放对象； 
2. 利用C++11实现线程池，主要使用std::function和std::thread;
3. 使用weak_ptr解决了requestData 和 timer 循环绑定问题;
4. 使用C++11中的std::mutex 和 std::condition_variable 改进线程同步与互斥方式.

Tips:
1. 对EPOLLONESHOT的理解，man手册上的解释如下：
EPOLLONESHOT (since Linux 2.6.2)
              Sets the one-shot behavior for the associated file descriptor.
              This means that after an event is pulled out with
              epoll_wait(2) the associated file descriptor is internally
              disabled and no other events will be reported by the epoll
              interface.  The user must call epoll_ctl() with EPOLL_CTL_MOD
              to rearm the file descriptor with a new event mask.

2. epoll sets中文件描述符何时被删除
Linux Programmer's Manual 中第六个问题：
        Q6  Will closing a file descriptor cause it to be removed from all
           epoll sets automatically?

        A6  Yes, but be aware of the following point.  A file descriptor is a
           reference to an open file description (see open(2)).  Whenever a
           file descriptor is duplicated via dup(2), dup2(2), fcntl(2)
           F_DUPFD, or fork(2), a new file descriptor referring to the same
           open file description is created.  An open file description con‐
           tinues to exist until all file descriptors referring to it have
           been closed.  A file descriptor is removed from an epoll set only
           after all the file descriptors referring to the underlying open
           file description have been closed (or before if the file descrip‐
           tor is explicitly removed using epoll_ctl(2) EPOLL_CTL_DEL).
           This means that even after a file descriptor that is part of an
           epoll set has been closed, events may be reported for that file
           descriptor if other file descriptors referring to the same under‐
           lying file description remain open.

当调用close()关闭对应的fd时，会使相应的引用计数减一，只有减到0时，epoll才会真的删掉它，所以，比较安全的做法是：
先del掉它，再close它(如果不确定close是否真的关闭了这个文件。)。

Problems:
1. WebBench测试后，server会自动停止
2. 性能不佳。
